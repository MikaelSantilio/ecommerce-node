services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres-dev
    environment:
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/01-init-databases.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce_user -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: ecommerce-mongodb-dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway - Development with hot reload
  api-gateway:
    build:
      context: ./packages/api-gateway
      dockerfile: Dockerfile.dev
    container_name: ecommerce-api-gateway-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=api-gateway
    volumes:
      - ./packages/api-gateway:/app:cached
      - api-gateway-node-modules:/app/node_modules
    networks:
      - ecommerce-network
    depends_on:
      - auth
      - catalog
      - cart
      - orders
      - payments
      - notifications
      - payment-simulator
    restart: unless-stopped

  # Authentication Service
  auth:
    build:
      context: ./packages/auth
      dockerfile: Dockerfile.dev
    container_name: ecommerce-auth-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=auth
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_password@postgres:5432/ecommerce_auth
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    volumes:
      - ./packages/auth/src:/app/src:cached
      - ./packages/auth/index.ts:/app/index.ts:cached
      - ./packages/auth/tsconfig.json:/app/tsconfig.json:cached
      - ./packages/auth/package.json:/app/package.json:cached
      - ./packages/auth/package-lock.json:/app/package-lock.json:cached
      - ./packages/auth/.env:/app/.env:cached
    networks:
      - ecommerce-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Catalog Service
  catalog:
    build:
      context: ./packages/catalog
      dockerfile: Dockerfile.dev
    container_name: ecommerce-catalog-dev
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=catalog
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_password@postgres:5432/ecommerce_catalog
    volumes:
      - ./packages/catalog/src:/app/src:cached
      - ./packages/catalog/index.ts:/app/index.ts:cached
      - ./packages/catalog/tsconfig.json:/app/tsconfig.json:cached
      - ./packages/catalog/package.json:/app/package.json:cached
      - ./packages/catalog/package-lock.json:/app/package-lock.json:cached
      - ./packages/catalog/.env:/app/.env:cached
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Cart Service
  cart:
    build:
      context: ./packages/cart
      dockerfile: Dockerfile.dev
    container_name: ecommerce-cart-dev
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=cart
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/ecommerce_cart?authSource=admin
    volumes:
      - ./packages/cart/src:/app/src:cached
      - ./packages/cart/index.ts:/app/index.ts:cached
      - ./packages/cart/tsconfig.json:/app/tsconfig.json:cached
      - ./packages/cart/package.json:/app/package.json:cached
      - ./packages/cart/package-lock.json:/app/package-lock.json:cached
      - ./packages/cart/.env:/app/.env:cached
    networks:
      - ecommerce-network
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # Orders Service
  orders:
    build:
      context: ./packages/orders
      dockerfile: Dockerfile.dev
    container_name: ecommerce-orders-dev
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=orders
    volumes:
      - ./packages/orders:/app:cached
      - orders-node-modules:/app/node_modules
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Payments Service
  payments:
    build:
      context: ./packages/payments
      dockerfile: Dockerfile.dev
    container_name: ecommerce-payments-dev
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=payments
      - DATABASE_URL=postgresql://ecommerce_user:ecommerce_password@postgres:5432/ecommerce_payments
      - PAYMENT_SIMULATOR_URL=http://payment-simulator:3006
      - ORDERS_SERVICE_URL=http://orders:3004
    volumes:
      - ./packages/payments/src:/app/src:cached
      - ./packages/payments/index.ts:/app/index.ts:cached
      - ./packages/payments/tsconfig.json:/app/tsconfig.json:cached
      - ./packages/payments/package.json:/app/package.json:cached
      - ./packages/payments/package-lock.json:/app/package-lock.json:cached
      - ./packages/payments/.env:/app/.env:cached
    networks:
      - ecommerce-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Notifications Service
  notifications:
    build:
      context: ./packages/notifications
      dockerfile: Dockerfile.dev
    container_name: ecommerce-notifications-dev
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=notifications
    volumes:
      - ./packages/notifications:/app:cached
      - notifications-node-modules:/app/node_modules
    networks:
      - ecommerce-network
    restart: unless-stopped

  # Payment Simulator Service
  payment-simulator:
    build:
      context: ./packages/payment-simulator
      dockerfile: Dockerfile.dev
    container_name: ecommerce-payment-simulator-dev
    ports:
      - "3007:3006"
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=payment-simulator
    volumes:
      - ./packages/payment-simulator:/app:cached
      - payment-simulator-node-modules:/app/node_modules
    networks:
      - ecommerce-network
    restart: unless-stopped

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  api-gateway-node-modules:
  auth-node-modules:
  catalog-node-modules:
  cart-node-modules:
  orders-node-modules:
  payments-node-modules:
  notifications-node-modules:
  payment-simulator-node-modules:
