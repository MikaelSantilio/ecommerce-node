# Development Dockerfile with hot reload
FROM node:22-slim

# Install necessary system dependencies for Prisma
RUN apt-get update && apt-get install -y \
    openssl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install nodemon globally for hot reload
RUN npm install -g nodemon ts-node

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm install

# Copy TypeScript config, Prisma schema and source code
COPY tsconfig.json ./
COPY prisma/ ./prisma/
COPY src/ ./src/
COPY index.ts ./

# Generate Prisma Client
RUN npx prisma generate

# Expose port
EXPOSE 3004

# Create non-root user for security
RUN groupadd --gid 1001 nodejs
RUN useradd --uid 1001 --gid nodejs --shell /bin/bash --create-home nodeuser

# Change ownership of the app directory
RUN chown -R nodeuser:nodejs /app
USER nodeuser

# Create a startup script that ensures dependencies are installed
RUN echo '#!/bin/sh' > /app/start-dev.sh && \
    echo 'cd /app' >> /app/start-dev.sh && \
    echo 'if [ ! -d "node_modules" ] || [ package.json -nt node_modules/.package-lock.json ]; then' >> /app/start-dev.sh && \
    echo '  echo "Installing dependencies..."' >> /app/start-dev.sh && \
    echo '  npm install' >> /app/start-dev.sh && \
    echo 'fi' >> /app/start-dev.sh && \
    echo 'if [ ! -d "node_modules/.prisma" ] || [ prisma/schema.prisma -nt node_modules/.prisma/client/index.js ]; then' >> /app/start-dev.sh && \
    echo '  echo "Generating Prisma Client..."' >> /app/start-dev.sh && \
    echo '  npx prisma generate' >> /app/start-dev.sh && \
    echo 'fi' >> /app/start-dev.sh && \
    echo 'exec "$@"' >> /app/start-dev.sh && \
    chmod +x /app/start-dev.sh

# Start the application in development mode with hot reload
CMD ["/app/start-dev.sh", "npm", "run", "dev"]
